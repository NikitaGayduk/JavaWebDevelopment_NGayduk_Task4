Fafaf.

public static int sumEven(List<Integer> li) {
	int sum = 0;
	for (Integer i: li)
		if (i % 2 == 0)
			sum += i;
		return sum;
}

The rest of the examples in this section use generics. If you are not yet familiar with the syntax of generics, see the Generics (Updated) lesson. Consider the following code:

public static int sumEven(List<Integer> li) {
	int sum = 0;
	for (Integer i: li)
		if (i % 2 == 0)
			sum += i;
		return sum;
}

import java.util.ArrayList;
import java.util.List;

public class Unboxing {
	public static void main(String[] args) {
		Integer i = new Integer(-8);

		// 1. Unboxing through method invocation
		int absVal = absoluteValue(i);
		System.out.println("absolute value of " + i + " = " + absVal);

		List<Double> ld = new ArrayList<>();
		ld.add(3.1416); // ? is autoboxed through method invocation.

		// 2. Unboxing through assignment
		double pi = ld.get(0);
		System.out.println("pi = " + pi);
	}

	public static int absoluteValue(int i) {
		return (i < 0) ? -i : i;
	}
}

The program prints the following:

absolute value of -8 = 8
pi = 3.1416

Autoboxing and unboxing lets developers write cleaner code, making it easier to read.

